{"version":3,"sources":["utils/uniqueTags.js","Components/FilterItems/index.js","Components/Search/index.js","Components/Loading/index.js","Components/AllFilter/index.js","Containers/Filter/index.js","Containers/Filter/redux.js","store/types.js","store/actions/fetchListAction.js","Components/ListItem/index.js","Containers/ShowList/index.js","Containers/ShowList/redux.js","Containers/App/index.js","store/reducers/index.js","store/reducers/fetchListReducer.js","store/reducers/filterReducer.js","index.js"],"names":["uniqueTags","listDB","results","reduce","filters","item","tags","forEach","tag","includes","push","FilterItems","_ref","handleSelectFilter","activeFilter","status","map","itemUpcase","charAt","toUpperCase","slice","react_default","a","createElement","key","className","name","type","value","checked","onChange","Search","inputFilter","handleOnChange","disabled","placeholder","alt","src","Loading","AllFilter","Filter","event","target","replace","_this","props","setInputFilter","selectFilter","this","fetchList","_this$props","Components_Search","Object","assign","Components_AllFilter","loading","Components_Loading","Components_FilterItems","React","Component","connect","store","filter","list","dispatch","link","asyncToGenerator","regenerator_default","mark","_callee","response","listObj","wrap","_context","prev","next","fetch","sent","json","payload","stop","_x","apply","arguments","asyncFetchList","ListItem","tagList","title","join","listToRender","toLowerCase","startsWith","Components_ListItem","App","Containers_Filter","Containers_ShowList","rootReducer","combineReducers","state","length","undefined","objectSpread","createStore","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","render","es","Containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.5b684c35.chunk.js","sourcesContent":["const uniqueTags = (listDB) => {\r\n    return listDB.results.reduce((filters, item) => {\r\n        item.tags.forEach(tag => {\r\n            if (!filters.includes(tag)) filters.push(tag);\r\n        });\r\n        return filters;\r\n    }, []);\r\n};\r\n\r\nexport default uniqueTags;","import React from 'react';\r\nimport './styles.scss';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FilterItems = ({listDB, handleSelectFilter, activeFilter}) => {\r\n    if (listDB.status === \"success\") {\r\n        return listDB.tags.map(item => {\r\n            let itemUpcase = item.charAt(0).toUpperCase() + item.slice(1);\r\n            return (\r\n                <li key={item} className=\"filterItem\">\r\n                    <label className=\"radio\">\r\n                        <input\r\n                            name=\"filter\"\r\n                            type=\"radio\"\r\n                            value={item}\r\n                            checked={activeFilter === item}\r\n                            onChange={handleSelectFilter}\r\n                        />\r\n                        <div className=\"radio__text\">{itemUpcase}</div>\r\n                    </label>\r\n                </li>\r\n            );\r\n        });\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nFilterItems.propTypes = {\r\n    listDB: PropTypes.shape({\r\n        tags: PropTypes.array,\r\n        loading: PropTypes.bool,\r\n        payload: PropTypes.object\r\n    }),\r\n    activeFilter: PropTypes.string,\r\n    handleSelectFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FilterItems;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Search = ({inputFilter, handleOnChange, handleSelectFilter}) => {\r\n    return (\r\n        <li className=\"filterItem\">\r\n            <label className=\"radio\">\r\n                <input name=\"filter\"\r\n                       type=\"radio\"\r\n                       checked={!!inputFilter}\r\n                       disabled={!inputFilter}\r\n                       value=\"\"\r\n                       onChange={handleSelectFilter}\r\n                />\r\n                <div className=\"radio__text\">\r\n                    <div className=\"searchWrapper\">\r\n                        <input type='text'\r\n                               onChange={handleOnChange}\r\n                               value={inputFilter}\r\n                               placeholder=\"Search\"\r\n                        />\r\n                        <img alt=\"search icon\" src=\"./images/search_icon.2b573fbc.png\"/>\r\n                    </div>\r\n                </div>\r\n            </label>\r\n        </li>\r\n    );\r\n};\r\n\r\nSearch.propTypes = {\r\n    handleOnChange: PropTypes.func.isRequired,\r\n    inputFilter: PropTypes.string,\r\n    handleSelectFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport './styles.scss';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <span className=\"dot1\"/>\r\n            <span className=\"dot2\"/>\r\n            <span className=\"dot3\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AllFilter = ({activeFilter, inputFilter, handleSelectFilter}) => {\r\n    return (\r\n        <li className=\"filterItem\">\r\n            <label className=\"radio\">\r\n                <input name=\"filter\"\r\n                       type=\"radio\"\r\n                       value=\"\"\r\n                       onChange={handleSelectFilter}\r\n                       checked={(!activeFilter && !inputFilter)}\r\n                />\r\n                <div className=\"radio__text\">\r\n                    All\r\n                </div>\r\n            </label>\r\n        </li>\r\n    );\r\n};\r\n\r\nAllFilter.propTypes = {\r\n    activeFilter: PropTypes.string,\r\n    inputFilter: PropTypes.string,\r\n    handleSelectFilter: PropTypes.func.isRequired,\r\n};\r\nexport default AllFilter;","import React from 'react';\r\nimport './styles.scss';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport {mapStateToProps, mapActionsToProps} from './redux';\r\nimport FilterItems from '../../Components/FilterItems/';\r\nimport Search from '../../Components/Search/';\r\nimport Loading from '../../Components/Loading/';\r\nimport AllFilter from \"../../Components/AllFilter/\";\r\n\r\nclass Filter extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchList('sdks.json');\r\n    }\r\n\r\n    handleOnChange = (event) => {\r\n        let value = event.target.value.replace(/\\s{2,}/, ' ');\r\n        value = value.replace(/^\\s+(.*)/, '$1');\r\n        this.props.setInputFilter(value);\r\n        if (value && this.props.activeFilter) {\r\n            this.props.selectFilter(\"\");\r\n        }\r\n    };\r\n\r\n    handleSelectFilter = (event) => {\r\n        this.props.selectFilter(event.target.value);\r\n        if (this.props.inputFilter) this.props.setInputFilter(\"\");\r\n    };\r\n\r\n    render() {\r\n        const {listDB, activeFilter, inputFilter} = this.props;\r\n        return (\r\n            <div className=\"filter\">\r\n                <ul>\r\n                    <Search\r\n                        {...{inputFilter}}\r\n                        handleOnChange={this.handleOnChange}\r\n                        handleSelectFilter={this.handleSelectFilter}\r\n                    />\r\n                    <AllFilter\r\n                        {...{activeFilter, inputFilter}}\r\n                        handleSelectFilter={this.handleSelectFilter}\r\n                    />\r\n                    {listDB.loading\r\n                        ? (<li className=\"filterLoading\"><Loading/></li>)\r\n                        : <FilterItems\r\n                            listDB={listDB}\r\n                            {...{activeFilter}}\r\n                            handleSelectFilter={this.handleSelectFilter}\r\n                        />}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFilter.propTypes = {\r\n    listDB: PropTypes.shape({\r\n        tags: PropTypes.array,\r\n        loading: PropTypes.bool,\r\n        payload: PropTypes.object\r\n    }),\r\n    activeFilter: PropTypes.string,\r\n    inputFilter: PropTypes.string,\r\n    setInputFilter: PropTypes.func.isRequired,\r\n    selectFilter: PropTypes.func.isRequired,\r\n    fetchList: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(Filter);","import {SET_INPUT_FILTER} from '../../store/types';\r\nimport {SET_ACTIVE_FILTER} from '../../store/types';\r\nimport asyncFetchList from \"../../store/actions/fetchListAction\";\r\n\r\nexport const mapStateToProps = (store) => ({\r\n    inputFilter: store.filter.inputFilter,\r\n    listDB: store.list,\r\n    activeFilter: store.filter.activeFilter\r\n});\r\n\r\n\r\nexport const mapActionsToProps = (dispatch) => ({\r\n    setInputFilter: (value) => {\r\n        dispatch({\r\n            type: SET_INPUT_FILTER,\r\n            inputFilter: value\r\n        });\r\n    },\r\n    selectFilter: (filter) => {\r\n        dispatch({\r\n            type: SET_ACTIVE_FILTER,\r\n            activeFilter: filter\r\n        })\r\n    },\r\n    fetchList: (link) => {\r\n        dispatch( asyncFetchList(link) );\r\n    }\r\n});","export const REQUEST_LIST = 'REQUEST_ITEMS';\r\nexport const RECEIVED_LIST = 'RECEIVED_ITEMS';\r\nexport const SET_INPUT_FILTER = 'SET_INPUT_FILTER';\r\nexport const SET_ACTIVE_FILTER = 'SET_ACTIVE_FILTER';\r\n","import {RECEIVED_LIST, REQUEST_LIST} from \"../types\";\r\nimport uniqueTags from '../../utils/uniqueTags';\r\n\r\n\r\nexport default (link) => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: REQUEST_LIST\r\n        });\r\n        let response = await fetch(link);\r\n        let listObj = await response.json();\r\n        let tags = uniqueTags(listObj);\r\n        dispatch({\r\n            type: RECEIVED_LIST,\r\n            payload: listObj,\r\n            tags\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ListItem = ({item}) => {\r\n    let tagList = item.tags.map((tag) => (tag.charAt(0).toUpperCase() + tag.slice(1)))\r\n    return (\r\n        <li className='showList__item'>\r\n            <div className=\"showList__item-title\">{item.title}</div>\r\n            <div className=\"showList__item-tag\">{tagList.join(\", \")}</div>\r\n        </li>\r\n    );\r\n};\r\n\r\nListItem.propTypes = {\r\n    item: PropTypes.shape({\r\n        tags: PropTypes.array,\r\n        title: PropTypes.string\r\n    })\r\n};\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {mapStateToProps} from './redux';\r\nimport './styles.scss';\r\nimport ListItem from \"../../Components/ListItem/\";\r\nimport Loading from '../../Components/Loading/';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ShowList = ({listDB, activeFilter, inputFilter}) => {\r\n        let list = [];\r\n        let listToRender;\r\n        if (listDB.status === \"success\") {\r\n            if (inputFilter) {\r\n                list = listDB.payload.results.filter(item => {\r\n                    return item.title.toLowerCase().startsWith(inputFilter.toLowerCase());\r\n                });\r\n            } else {\r\n                list = listDB.payload.results.filter(item => {\r\n                    return activeFilter ? item.tags.includes(activeFilter) : true;\r\n                });\r\n            }\r\n            listToRender = list.map(item => (<ListItem key={item.title} item={item}/>));\r\n        }\r\n        return listDB.status !== \"success\"\r\n            ? (<div className=\"listLoading\"><Loading/></div>)\r\n            : (<div className='showList'>\r\n                    <ul>{listToRender}</ul>\r\n                </div>\r\n            )\r\n};\r\nShowList.propTypes = {\r\n    listDB: PropTypes.shape({\r\n        tags: PropTypes.array,\r\n        loading: PropTypes.bool,\r\n        payload: PropTypes.object\r\n    }),\r\n    activeFilter: PropTypes.string,\r\n    inputFilter: PropTypes.string,\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ShowList);","export const mapStateToProps = (store) => ({\r\n    inputFilter: store.filter.inputFilter,\r\n    listDB: store.list,\r\n    activeFilter: store.filter.activeFilter\r\n});","import React from 'react';\nimport './styles.scss';\nimport Filter from '../Filter';\nimport ShowList from '../ShowList';\n\n\nconst App = () => {\n        return (\n            <div className=\"app\">\n                <Filter/>\n                <ShowList/>\n            </div>\n        );\n};\n\nexport default App;\n","import {combineReducers} from 'redux';\r\nimport fetchListReducer from './fetchListReducer';\r\nimport filterReducer from './filterReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    list: fetchListReducer,\r\n    filter: filterReducer\r\n});\r\n\r\nexport default rootReducer;","import {REQUEST_LIST} from '../types';\r\nimport {RECEIVED_LIST} from '../types';\r\n\r\nexport default (state = {\r\n    loading: false,\r\n    payload: {},\r\n    tags: [],\r\n    status: null\r\n                },{type, payload, tags}) => {\r\n    switch (type) {\r\n        case REQUEST_LIST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case RECEIVED_LIST:\r\n            return {\r\n                loading: false,\r\n                payload,\r\n                tags,\r\n                status: \"success\"\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_ACTIVE_FILTER, SET_INPUT_FILTER} from '../types';\r\n\r\nexport default (state = {\r\n    activeFilter: \"\",\r\n    inputFilter: \"\"\r\n}, {type, inputFilter, activeFilter}) => {\r\n    switch (type) {\r\n        case SET_ACTIVE_FILTER:\r\n            return {...state, activeFilter};\r\n        case SET_INPUT_FILTER:\r\n            return {...state, inputFilter};\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Containers/App';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './store/reducers/index';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(reduxThunk)));\n\nReactDOM.render((\n    <Provider store={store}>\n        <App/>\n    </Provider>\n), document.getElementById('root'));"],"sourceRoot":""}