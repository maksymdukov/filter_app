{"version":3,"sources":["Components/FilterItems/index.js","Components/Search/index.js","Components/Loading/index.js","Components/AllFilter/index.js","api/index.js","utils/uniqueTags.js","Containers/Filter/index.js","Containers/Filter/redux.js","store/types.js","store/actions/fetchListAction.js","Components/ListItem/index.js","Containers/ShowList/index.js","Containers/ShowList/redux.js","Containers/App/index.js","store/reducers/index.js","store/reducers/listReducer.js","store/reducers/filterReducer.js","index.js"],"names":["FilterItems","_ref","_ref$listDB","listDB","status","tags","payload","handleSelectFilter","activeFilter","map","item","itemUpcase","charAt","toUpperCase","slice","react_default","a","createElement","key","className","name","type","value","checked","onChange","Search","inputFilter","handleOnChange","disabled","placeholder","alt","src","Loading","AllFilter","fetchList","link","fetch","then","res","json","uniqueTags","results","reduce","filters","forEach","tag","includes","push","Filter","event","target","replace","_this","props","setInputFilter","selectFilter","this","_this$props","Components_Search","Components_AllFilter","loading","Components_Loading","Components_FilterItems","React","Component","connect","store","filter","list","dispatch","Object","asyncToGenerator","regenerator_default","mark","_callee","listObj","wrap","_context","prev","next","sent","stop","_x","apply","arguments","asyncFetchList","ListItem","tagList","title","join","listToRender","_ref2","toLowerCase","startsWith","_ref3","Components_ListItem","App","Containers_Filter","Containers_ShowList","rootReducer","combineReducers","state","length","undefined","objectSpread","createStore","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","render","es","Containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.779c95ba.chunk.js","sourcesContent":["// node modules\r\nimport React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n// styles\r\nimport './styles.scss';\r\n\r\nconst FilterItems = ({\r\n                         listDB: {status, payload: {tags}},\r\n                         handleSelectFilter,\r\n                         activeFilter}) => {\r\n    if (status === \"success\") {\r\n        return tags.map(item => {\r\n            let itemUpcase = item.charAt(0).toUpperCase() + item.slice(1);\r\n            return (\r\n                <li key={item} className=\"filterItem\">\r\n                    <label className=\"radio\">\r\n                        <input\r\n                            name=\"filter\"\r\n                            type=\"radio\"\r\n                            value={item}\r\n                            checked={activeFilter === item}\r\n                            onChange={handleSelectFilter}\r\n                        />\r\n                        <div className=\"radio__text\">{itemUpcase}</div>\r\n                    </label>\r\n                </li>\r\n            );\r\n        });\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nFilterItems.propTypes = {\r\n    listDB: PropTypes.shape({\r\n        tags: PropTypes.array,\r\n        loading: PropTypes.bool,\r\n        payload: PropTypes.object\r\n    }),\r\n    activeFilter: PropTypes.string,\r\n    handleSelectFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FilterItems;","// node modules\r\nimport React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Search = ({inputFilter, handleOnChange, handleSelectFilter}) => {\r\n    return (\r\n        <li className=\"filterItem\">\r\n            <label className=\"radio\">\r\n                <input name=\"filter\"\r\n                       type=\"radio\"\r\n                       checked={!!inputFilter}\r\n                       disabled={!inputFilter}\r\n                       value=\"\"\r\n                       onChange={handleSelectFilter}\r\n                />\r\n                <div className=\"radio__text\">\r\n                    <div className=\"searchWrapper\">\r\n                        <input type='text'\r\n                               onChange={handleOnChange}\r\n                               value={inputFilter}\r\n                               placeholder=\"Search\"\r\n                        />\r\n                        <img alt=\"search icon\" src=\"./images/search_icon.2b573fbc.png\"/>\r\n                    </div>\r\n                </div>\r\n            </label>\r\n        </li>\r\n    );\r\n};\r\n\r\nSearch.propTypes = {\r\n    handleOnChange: PropTypes.func.isRequired,\r\n    inputFilter: PropTypes.string,\r\n    handleSelectFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Search;","// node modules\r\nimport React from 'react';\r\n\r\n// styles\r\nimport './styles.scss';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <span className=\"dot1\"/>\r\n            <span className=\"dot2\"/>\r\n            <span className=\"dot3\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","// node modules\r\nimport React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AllFilter = ({activeFilter, inputFilter, handleSelectFilter}) => {\r\n    return (\r\n        <li className=\"filterItem\">\r\n            <label className=\"radio\">\r\n                <input name=\"filter\"\r\n                       type=\"radio\"\r\n                       value=\"\"\r\n                       onChange={handleSelectFilter}\r\n                       checked={(!activeFilter && !inputFilter)}\r\n                />\r\n                <div className=\"radio__text\">\r\n                    All\r\n                </div>\r\n            </label>\r\n        </li>\r\n    );\r\n};\r\n\r\nAllFilter.propTypes = {\r\n    activeFilter: PropTypes.string,\r\n    inputFilter: PropTypes.string,\r\n    handleSelectFilter: PropTypes.func.isRequired,\r\n};\r\nexport default AllFilter;","export const fetchList = (link) => fetch(link)\r\n                                    .then(res => res.json())\r\n                                    .then(res => res)","const uniqueTags = (listDB) => {\r\n    return listDB.results.reduce((filters, item) => {\r\n        item.tags.forEach(tag => {\r\n            if (!filters.includes(tag)) filters.push(tag);\r\n        });\r\n        return filters;\r\n    }, []);\r\n};\r\n\r\nexport default uniqueTags;","// node modules\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\n\r\n// local files and components\r\nimport FilterItems from '../../Components/FilterItems/';\r\nimport Search from '../../Components/Search/';\r\nimport Loading from '../../Components/Loading/';\r\nimport AllFilter from \"../../Components/AllFilter/\";\r\n\r\n// styles and decorators values\r\nimport {mapStateToProps, mapActionsToProps} from './redux';\r\nimport './styles.scss';\r\n\r\nclass Filter extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchList('sdks.json');\r\n    }\r\n\r\n    handleOnChange = (event) => {\r\n        let value = event.target.value.replace(/\\s{2,}/, ' ');\r\n        value = value.replace(/^\\s+(.*)/, '$1');\r\n        this.props.setInputFilter(value);\r\n        if (value && this.props.activeFilter) {\r\n            this.props.selectFilter(\"\");\r\n        }\r\n    };\r\n\r\n    handleSelectFilter = (event) => {\r\n        this.props.selectFilter(event.target.value);\r\n        if (this.props.inputFilter) this.props.setInputFilter(\"\");\r\n    };\r\n\r\n    render() {\r\n        const { props: {listDB, activeFilter, inputFilter}, handleOnChange, handleSelectFilter} = this;\r\n        return (\r\n            <div className=\"filter\">\r\n                <ul>\r\n                    <Search {...{inputFilter, handleOnChange, handleSelectFilter}} />\r\n                    <AllFilter {...{activeFilter, inputFilter, handleSelectFilter}} />\r\n                    {listDB.loading\r\n                        ? (<li className=\"filterLoading\"><Loading/></li>)\r\n                        : <FilterItems {...{activeFilter, listDB, handleSelectFilter}} />\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFilter.propTypes = {\r\n    listDB: PropTypes.shape({\r\n        loading: PropTypes.bool,\r\n        payload: PropTypes.object\r\n    }),\r\n    activeFilter: PropTypes.string,\r\n    inputFilter: PropTypes.string,\r\n    setInputFilter: PropTypes.func.isRequired,\r\n    selectFilter: PropTypes.func.isRequired,\r\n    fetchList: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(Filter);","import {SET_INPUT_FILTER} from '../../store/types';\r\nimport {SET_ACTIVE_FILTER} from '../../store/types';\r\nimport asyncFetchList from \"../../store/actions/fetchListAction\";\r\n\r\nexport const mapStateToProps = (store) => ({\r\n    inputFilter: store.filter.inputFilter,\r\n    listDB: store.list,\r\n    activeFilter: store.filter.activeFilter\r\n});\r\n\r\n\r\nexport const mapActionsToProps = (dispatch) => ({\r\n    setInputFilter: (value) => {\r\n        dispatch({\r\n            type: SET_INPUT_FILTER,\r\n            inputFilter: value\r\n        });\r\n    },\r\n    selectFilter: (filter) => {\r\n        dispatch({\r\n            type: SET_ACTIVE_FILTER,\r\n            activeFilter: filter\r\n        })\r\n    },\r\n    fetchList: (link) => {\r\n        dispatch( asyncFetchList(link) );\r\n    }\r\n});","export const REQUEST_LIST = 'REQUEST_ITEMS';\r\nexport const RECEIVED_LIST = 'RECEIVED_ITEMS';\r\nexport const SET_INPUT_FILTER = 'SET_INPUT_FILTER';\r\nexport const SET_ACTIVE_FILTER = 'SET_ACTIVE_FILTER';\r\n","import {RECEIVED_LIST, REQUEST_LIST} from \"../types\";\r\nimport {fetchList} from \"../../api\"\r\nimport uniqueTags from '../../utils/uniqueTags';\r\n\r\n\r\nexport default (link) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: REQUEST_LIST });\r\n        const listObj = await fetchList(link);\r\n        const tags = uniqueTags(listObj);\r\n        dispatch({\r\n            type: RECEIVED_LIST,\r\n            payload:{listObj, tags}\r\n        });\r\n    }\r\n}","// node modules\r\nimport React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ListItem = ({item}) => {\r\n    let tagList = item.tags.map((tag) => (tag.charAt(0).toUpperCase() + tag.slice(1)))\r\n    return (\r\n        <li className='showList__item'>\r\n            <div className=\"showList__item-title\">{item.title}</div>\r\n            <div className=\"showList__item-tag\">{tagList.join(\", \")}</div>\r\n        </li>\r\n    );\r\n};\r\n\r\nListItem.propTypes = {\r\n    item: PropTypes.shape({\r\n        tags: PropTypes.array,\r\n        title: PropTypes.string\r\n    })\r\n};\r\n\r\nexport default ListItem;","// node modules\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\n\r\n// local files and components\r\nimport ListItem from \"../../Components/ListItem/\";\r\nimport Loading from '../../Components/Loading/';\r\n\r\n// styles and decorators values\r\nimport './styles.scss';\r\nimport {mapStateToProps} from './redux';\r\n\r\nconst ShowList = ({\r\n                      listDB: {\r\n                          status,\r\n                          payload: { listObj: {results} }\r\n                          },\r\n                      activeFilter,\r\n                      inputFilter\r\n                }) => {\r\n\r\n        let list = [];\r\n        let listToRender;\r\n        if (status === \"success\") {\r\n            list = inputFilter\r\n                ? results.filter(({title}) => title.toLowerCase().startsWith(inputFilter.toLowerCase()))\r\n                : results.filter(({tags}) => activeFilter ? tags.includes(activeFilter) : true);\r\n\r\n            listToRender = list.map( item => <ListItem key={item.title} item={item}/> );\r\n        }\r\n        return (\r\n            status !== \"success\"\r\n                ? (<div className=\"listLoading\"><Loading/></div>)\r\n                : (\r\n                    <div className='showList'>\r\n                        <ul>{listToRender}</ul>\r\n                    </div>\r\n                )\r\n        )\r\n};\r\nShowList.propTypes = {\r\n    listDB: PropTypes.shape({\r\n        loading: PropTypes.bool,\r\n        payload: PropTypes.object\r\n    }),\r\n    activeFilter: PropTypes.string,\r\n    inputFilter: PropTypes.string,\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ShowList);","export const mapStateToProps = (store) => ({\r\n    inputFilter: store.filter.inputFilter,\r\n    listDB: store.list,\r\n    activeFilter: store.filter.activeFilter\r\n});","// node modules\nimport React from 'react';\n\n// local files and components\nimport Filter from '../Filter';\nimport ShowList from '../ShowList';\n\n// styles\nimport './styles.scss';\n\n\nconst App = () => {\n        return (\n            <div className=\"app\">\n                <Filter/>\n                <ShowList/>\n            </div>\n        );\n};\n\nexport default App;\n","import {combineReducers} from 'redux';\r\nimport fetchListReducer from './listReducer';\r\nimport filterReducer from './filterReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    list: fetchListReducer,\r\n    filter: filterReducer\r\n});\r\n\r\nexport default rootReducer;","import {REQUEST_LIST} from '../types';\r\nimport {RECEIVED_LIST} from '../types';\r\n\r\nexport default (state = {\r\n    loading: false,\r\n    payload: {\r\n        listObj: {},\r\n        tags: []\r\n    },\r\n    status: null\r\n                },{type, payload}) => {\r\n    switch (type) {\r\n        case REQUEST_LIST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case RECEIVED_LIST:\r\n            return {\r\n                loading: false,\r\n                payload,\r\n                status: \"success\"\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_ACTIVE_FILTER, SET_INPUT_FILTER} from '../types';\r\n\r\nexport default (state = {\r\n    activeFilter: \"\",\r\n    inputFilter: \"\"\r\n}, {type, inputFilter, activeFilter}) => {\r\n    switch (type) {\r\n        case SET_ACTIVE_FILTER:\r\n            return {...state, activeFilter};\r\n        case SET_INPUT_FILTER:\r\n            return {...state, inputFilter};\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Containers/App';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './store/reducers/index';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(reduxThunk)));\n\nReactDOM.render((\n    <Provider store={store}>\n        <App/>\n    </Provider>\n), document.getElementById('root'));"],"sourceRoot":""}