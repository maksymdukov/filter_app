{"version":3,"sources":["Components/FilterItems/index.js","Components/Search/index.js","Components/Loading/index.js","Components/AllFilter/index.js","Containers/Filter/index.js","Containers/Filter/redux.js","store/types.js","Components/ListItem/index.js","Containers/ShowList/index.js","Containers/ShowList/redux.js","Containers/App/index.js","Containers/App/redux.js","store/reducers/index.js","store/reducers/itemList.js","store/reducers/fetchList.js","store/reducers/inputFilter.js","store/reducers/activeFilter.js","index.js"],"names":["FilterItems","_ref","listDB","handleSelectFilter","status","payload","results","reduce","filters","item","tags","forEach","tag","includes","push","map","itemUpcase","charAt","toUpperCase","slice","react_default","a","createElement","key","className","name","type","value","onChange","Search","inputFilter","handleOnChange","checked","disabled","placeholder","src","Loading","AllFilter","activeFilter","Filter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","target","replace","setInputFilter","selectFilter","_this$props","Components_Search","assign","Components_AllFilter","loading","Components_Loading","Components_FilterItems","React","Component","connect","store","fetchList","dispatch","filter","ListItem","tagList","title","join","ShowList","listToRender","toLowerCase","startsWith","Components_ListItem","App","Containers_Filter","Containers_ShowList","itemList","link","setTimeout","fetch","then","response","json","listObj","rootReducer","combineReducers","state","arguments","length","undefined","concat","toConsumableArray","objectSpread","createStore","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","render","es","Containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.eee62b66.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles.scss';\r\n\r\nconst FilterItems = ({listDB, handleSelectFilter}) => {\r\n    if (listDB.status === \"success\") {\r\n        const filters = listDB.payload.results.reduce((filters, item) => {\r\n            item.tags.forEach(tag => {\r\n                if (!filters.includes(tag)) filters.push(tag);\r\n            });\r\n            return filters;\r\n        }, []);\r\n\r\n        return filters.map(item => {\r\n            let itemUpcase = item.charAt(0).toUpperCase() + item.slice(1);\r\n            return (\r\n                <li key={item} className=\"filterItem\">\r\n                    <label className=\"radio\">\r\n                        <input\r\n                            name=\"filter\"\r\n                            type=\"radio\"\r\n                            value={item}\r\n                            onChange={handleSelectFilter}\r\n                        />\r\n                        <div className=\"radio__text\">{itemUpcase}</div>\r\n                    </label>\r\n                </li>\r\n            );\r\n        });\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default FilterItems;","import React from 'react';\r\n\r\nconst Search = ({inputFilter, handleOnChange, handleSelectFilter}) => {\r\n    return (\r\n        <li className=\"filterItem\">\r\n            <label className=\"radio\">\r\n                <input name=\"filter\"\r\n                       type=\"radio\"\r\n                       checked={!!inputFilter}\r\n                       disabled={!inputFilter}\r\n                       value=\"\"\r\n                       onChange={handleSelectFilter}\r\n                />\r\n                <div className=\"radio__text\">\r\n                    <div className=\"searchWrapper\">\r\n                        <input type='text'\r\n                               onChange={handleOnChange}\r\n                               value={inputFilter}\r\n                               placeholder=\"Search\"\r\n                        />\r\n                        <img src=\"./images/search_icon.2b573fbc.png\"/>\r\n                    </div>\r\n                </div>\r\n            </label>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport './styles.scss';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <span className=\"dot1\"/>\r\n            <span className=\"dot2\"/>\r\n            <span className=\"dot3\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","import React from 'react';\r\n\r\nconst AllFilter = ({activeFilter, inputFilter, handleSelectFilter}) => {\r\n    return (\r\n        <li className=\"filterItem\">\r\n            <label className=\"radio\">\r\n                <input name=\"filter\"\r\n                       type=\"radio\"\r\n                       value=\"\"\r\n                       onChange={handleSelectFilter}\r\n                       checked={(!activeFilter && !inputFilter)}\r\n                />\r\n                <div className=\"radio__text\">\r\n                    All\r\n                </div>\r\n            </label>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default AllFilter;","import React from 'react';\r\nimport './styles.scss';\r\nimport {connect} from 'react-redux';\r\nimport {mapStateToProps, mapActionsToProps} from './redux';\r\nimport FilterItems from '../../Components/FilterItems/';\r\nimport Search from '../../Components/Search/';\r\nimport Loading from '../../Components/Loading/';\r\nimport AllFilter from \"../../Components/AllFilter/\";\r\n\r\nclass Filter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleOnChange = (event) => {\r\n        let value = event.target.value.replace(/\\s{2,}/, ' ');\r\n        value = value.replace(/^\\s+(.*)/, '$1');\r\n        this.props.setInputFilter(value);\r\n        if (value && this.props.activeFilter) {\r\n            this.props.selectFilter(\"\");\r\n        }\r\n    };\r\n\r\n    handleSelectFilter = (event) => {\r\n        this.props.selectFilter(event.target.value);\r\n        if (this.props.inputFilter) this.props.setInputFilter(\"\");\r\n    };\r\n\r\n    render() {\r\n        const {listDB, activeFilter, inputFilter} = this.props;\r\n        return (\r\n            <div className=\"filter\">\r\n                <ul>\r\n                    <Search\r\n                        {...{inputFilter}}\r\n                        handleOnChange={this.handleOnChange}\r\n                        handleSelectFilter={this.handleSelectFilter}\r\n                    />\r\n                    <AllFilter\r\n                        {...{activeFilter}}\r\n                        {...{inputFilter}}\r\n                        handleSelectFilter={this.handleSelectFilter}\r\n                    />\r\n                    {listDB.loading\r\n                        ? (<li className=\"filterLoading\"><Loading/></li>)\r\n                        : <FilterItems\r\n                            listDB={listDB}\r\n                            handleSelectFilter={this.handleSelectFilter}\r\n                        />}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(Filter);","import {SET_INPUT_FILTER} from '../../store/types';\r\nimport {SET_ACTIVE_FILTER} from '../../store/types';\r\n\r\nexport const mapStateToProps = (store) => ({\r\n    inputFilter: store.inputFilter,\r\n    listDB: store.fetchList,\r\n    activeFilter: store.activeFilter\r\n});\r\n\r\n\r\nexport const mapActionsToProps = (dispatch) => ({\r\n    setInputFilter: (value) => {\r\n        dispatch({\r\n            type: SET_INPUT_FILTER,\r\n            payload: value\r\n        });\r\n    },\r\n    selectFilter: (filter) => {\r\n        dispatch({\r\n            type: SET_ACTIVE_FILTER,\r\n            filter\r\n        })\r\n    }\r\n});","export const CHANGE_ITEM_LIST = 'CHANGE_ITEM_LIST';\r\nexport const ADD_ITEM_TO_LIST = 'ADD_ITEM_TO_LIST';\r\nexport const REQUEST_LIST = 'REQUEST_ITEMS';\r\nexport const RECEIVED_LIST = 'RECEIVED_ITEMS';\r\nexport const SET_INPUT_FILTER = 'SET_INPUT_FILTER';\r\nexport const SET_ACTIVE_FILTER = 'SET_ACTIVE_FILTER';\r\n","import React from 'react';\r\n\r\nconst ListItem = ({item}) => {\r\n    let tagList = item.tags.map((tag) => (tag.charAt(0).toUpperCase() + tag.slice(1)))\r\n    return (\r\n        <li className='showList__item'>\r\n            <div className=\"showList__item-title\">{item.title}</div>\r\n            <div className=\"showList__item-tag\">{tagList.join(\", \")}</div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {mapStateToProps} from './redux';\r\nimport './styles.scss';\r\nimport ListItem from \"../../Components/ListItem/\";\r\nimport Loading from '../../Components/Loading/';\r\n\r\nclass ShowList extends React.Component {\r\n    render() {\r\n        let {listDB, activeFilter, inputFilter} = this.props;\r\n        let list = [];\r\n        let listToRender;\r\n        if (listDB.status === \"success\") {\r\n            if (inputFilter) {\r\n                list = listDB.payload.results.filter(item => {\r\n                    return item.title.toLowerCase().startsWith(inputFilter.toLowerCase());\r\n                });\r\n            } else {\r\n                list = listDB.payload.results.filter(item => {\r\n                    return activeFilter ? item.tags.includes(activeFilter) : true;\r\n                });\r\n            }\r\n            listToRender = list.map(item => (<ListItem key={item.title} item={item}/>));\r\n        }\r\n        return listDB.status !== \"success\"\r\n            ? (<div className=\"listLoading\"><Loading/></div>)\r\n            : (<div className='showList'>\r\n                    <ul>{listToRender}</ul>\r\n                </div>\r\n            )\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ShowList);","export const mapStateToProps = (store) => ({\r\n    inputFilter: store.inputFilter,\r\n    listDB: store.fetchList,\r\n    activeFilter: store.activeFilter\r\n});","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {mapStateToProps, mapActionsToProps} from './redux';\nimport './styles.scss';\nimport Filter from '../Filter';\nimport ShowList from '../ShowList';\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.fetchList('sdks.json');\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <Filter/>\n                <ShowList/>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapActionsToProps\n)(App);\n","import {\r\n    REQUEST_LIST,\r\n    RECEIVED_LIST\r\n} from '../../store/types';\r\n\r\nexport const mapStateToProps = (store) => ({\r\n    itemList: store.itemList,\r\n    listDB: store.fetchList\r\n});\r\n\r\nexport const mapActionsToProps = (dispatch) => ({\r\n    fetchList: (link) => {\r\n        dispatch({\r\n            type: REQUEST_LIST\r\n        });\r\n        setTimeout(() => {\r\n            fetch(link)\r\n                .then((response) => response.json())\r\n                .then(listObj => {\r\n                        dispatch({\r\n                            type: RECEIVED_LIST,\r\n                            payload: listObj\r\n                        });\r\n                    }\r\n                );\r\n        }, 1000);\r\n    }\r\n});","import {combineReducers} from 'redux';\r\nimport itemList from './itemList';\r\nimport fetchList from './fetchList';\r\nimport inputFilter from './inputFilter';\r\nimport activeFilter from './activeFilter';\r\n\r\nconst rootReducer = combineReducers({\r\n    itemList,\r\n    fetchList,\r\n    inputFilter,\r\n    activeFilter\r\n});\r\n\r\nexport default rootReducer;","import {CHANGE_ITEM_LIST} from '../types';\r\nimport {ADD_ITEM_TO_LIST} from '../types';\r\n\r\nexport default (state = [], {type, payload}) => {\r\n    switch (type) {\r\n        case CHANGE_ITEM_LIST:\r\n            return payload;\r\n        case ADD_ITEM_TO_LIST:\r\n            return [...state, payload];\r\n        default:\r\n            return state;\r\n    }\r\n}","import {REQUEST_LIST} from '../types';\r\nimport {RECEIVED_LIST} from '../types';\r\n\r\nexport default (state = {loading: false},\r\n                {type, payload}) => {\r\n    switch (type) {\r\n        case REQUEST_LIST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case RECEIVED_LIST:\r\n            return {\r\n                loading: false,\r\n                payload,\r\n                status: \"success\"\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_INPUT_FILTER} from '../types';\r\n\r\nexport default (state = \"\", {type, payload}) => {\r\n    switch (type) {\r\n        case SET_INPUT_FILTER:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_ACTIVE_FILTER} from '../types';\r\n\r\nexport default (state = \"\", {type, filter}) => {\r\n    switch (type) {\r\n        case SET_ACTIVE_FILTER:\r\n            return filter;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Containers/App';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './store/reducers/index';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(reduxThunk)));\n\nReactDOM.render((\n    <Provider store={store}>\n        <App/>\n    </Provider>\n), document.getElementById('root'));"],"sourceRoot":""}